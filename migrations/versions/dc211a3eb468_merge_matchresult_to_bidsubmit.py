"""merge matchresult to bidsubmit

Revision ID: dc211a3eb468
Revises: 1e2c4d02cd4f
Create Date: 2021-01-10 00:18:08.859493

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# required if base_model or ModelMixin is used,
# so that utils.base_model's class can be referenced.
import sys
sys.path.insert(0, "./pt")
import utils

# revision identifiers, used by Alembic.
revision = 'dc211a3eb468'
down_revision = '1e2c4d02cd4f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('matchresult')
    op.add_column('bidsubmit', sa.Column('achievement', sa.Float(), nullable=True))
    op.add_column('bidsubmit', sa.Column('counterpart_address', sa.String(length=120), nullable=True))
    op.add_column('bidsubmit', sa.Column('counterpart_name', sa.String(length=80), nullable=True))
    op.add_column('bidsubmit', sa.Column('settlement', sa.Float(), nullable=True))
    op.add_column('bidsubmit', sa.Column('status', sa.String(length=40), nullable=True))
    op.add_column('bidsubmit', sa.Column('transaction_hash', sa.String(length=80), nullable=True))
    op.add_column('bidsubmit', sa.Column('win', sa.Integer(), nullable=True))
    op.add_column('bidsubmit', sa.Column('win_price', sa.Float(), nullable=True))
    op.add_column('bidsubmit', sa.Column('win_value', sa.Float(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('bidsubmit', 'win_value')
    op.drop_column('bidsubmit', 'win_price')
    op.drop_column('bidsubmit', 'win')
    op.drop_column('bidsubmit', 'transaction_hash')
    op.drop_column('bidsubmit', 'status')
    op.drop_column('bidsubmit', 'settlement')
    op.drop_column('bidsubmit', 'counterpart_name')
    op.drop_column('bidsubmit', 'counterpart_address')
    op.drop_column('bidsubmit', 'achievement')
    op.create_table('matchresult',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('bid_type', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('win', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('counterpart_name', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('counterpart_address', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('bid_value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bid_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('win_value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('win_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('achievement', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('settlement', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('transaction_hash', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('upload', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('tenders_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tenders_id'], ['tenders.uuid'], name='matchresult_tenders_id_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='matchresult_pkey')
    )
    # ### end Alembic commands ###
